// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init
// TODO: Change the details of description to more specific items used for the Protection Plan Statement
// TODO: Create customer data and check relationshp with user
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String      @id @default(uuid())
  clerkUserId  String      @unique
  email        String      @unique
  firstName    String
  lastName     String
  imageUrl     String?
  isAdmin      Boolean     @default(false)
  role         String      @default("User")
  dealership   Dealership? @relation(fields: [dealershipId], references: [id])
  dealershipId Int?
  active       Boolean     @default(true)
  createdAt    DateTime    @default(now())
  updatedAt    DateTime    @updatedAt
}

model Customer {
  id               String                  @id @default(uuid())
  fName            String
  lName            String
  email            String                  // create fake email in case user does not have an email. email can
  mobile           String                  // it is possible that mobile/email is not unique since can have an account on 2 different dealership
  landline         String?
  customerVehicles CustomerVehicle[]
  dealership       Dealership?             @relation(fields: [dealershipId], references: [id])
  dealershipId     Int?
  protectionPlans  ProtectionPlanAvailed[]
  userId           String // entered by logged in user/contact person
  createdAt        DateTime                @default(now())
  updatedAt        DateTime                @updatedAt

  @@index([userId])
}

model CustomerVehicle {
  id              String                  @id @default(uuid())
  make            String
  model           String?
  year            Int?
  vin             String?                 @unique
  plateNo         String                  @unique
  registration    String?                 @unique
  transmission    String?
  fuelEngineType  String
  dealerships     Dealership[]
  protectionPlans ProtectionPlanAvailed[]
  customer        Customer                @relation(fields: [customerId], references: [id], onDelete: Cascade)
  customerId      String
  enteredBy       String // enterd by logged in user
  createdAt       DateTime                @default(now())
  updatedAt       DateTime                @updatedAt

  // @@index([customerId])
}

model Dealership {
  id                Int                     @id @default(autoincrement())
  name              String
  address1          String
  address2          String?
  mobile            String                  @unique
  landline          String?
  contactPerson     String?
  protectionPlans   ProtectionPlanAvailed[]
  customerVehicle   CustomerVehicle?        @relation(fields: [customerVehicleId], references: [id], onDelete: Cascade)
  customerVehicleId String?
  // customer          Customer?               @relation(fields: [customerId], references: [id], onDelete: Cascade)
  // customerId        String?
  customers         Customer[]
  users             User[]
  enteredBy         String? // logged in user when adding dealership record
  createdAt         DateTime?               @default(now())
  updatedAt         DateTime?               @updatedAt
  // @@index([customerId])

  @@index([customerVehicleId])
}

model ProtectionPlanAvailed {
  id                 String          @id @default(uuid())
  invoice            String          @unique
  receipt            String          @unique
  protectionPlan     ProtectionPlan  @relation(fields: [protectionPlanId], references: [id])
  odometerReading    Int
  initialServiceDate String
  servicePerformedBy String
  paid               Boolean
  amount             Float
  expired            Boolean
  renewal            Boolean
  engineOilUsed      String?
  Customer           Customer        @relation(fields: [customerId], references: [id], onDelete: Cascade)
  customerId         String
  CustomerVehicle    CustomerVehicle @relation(fields: [customerVehicleId], references: [id], onDelete: Cascade)
  customerVehicleId  String
  Dealership         Dealership      @relation(fields: [dealershipId], references: [id])
  dealershipId       Int
  eneteredBy         String // entered by user logged in
  createdAt          DateTime        @default(now())
  updatedAt          DateTime        @updatedAt
  protectionPlanId   String

  @@index([customerId])
  @@index([customerVehicleId])
  @@index([dealershipId])
}

model ProtectionPlan {
  id                     String                  @id
  name                   String
  products               String
  protectionPlanCategory String
  serviceDescription     String
  reimbursementAmount    Float
  planTerms              PlanTerms               @relation(fields: [planTermId], references: [id])
  planTermId             String
  coverage               String
  serviceInterval        String
  fuelEngineType         String
  ProtectionPlanAvailed  ProtectionPlanAvailed[]
}

model PlanTerms {
  id             String           @id
  name           String
  description    String
  ProtectionPlan ProtectionPlan[]
}

model Product {
  id   String @id
  name String
}

model ProtectionPlanCategory {
  id   String @id
  name String
}

model FuelEngineType {
  id   String @id
  name String
}

model Role {
  id   String @id
  name String
}

model EngineOil {
  id   String @id
  name String
}

// enum Products {
//   BG110
//   BG112
//   BG110_BG208
//   BG110_BG213
//   BG112_BG244
//   BG112_BG245
//   BG109_BG110
//   BG109_BG112
//   BG109_BG110_BG208
//   BG109_BG112_BG244
//   BG109_BG112_BG245
// }

// model PlanType {
//   id String @id
//   name String
//   odometerReading String
// }

// enum ProtectionPlanCat {
//   ENGINE_OIL_SERVICES
//   MOA
//   AUTOMOTIVE_SERVICES
// }

// enum FuelEngineType {
//   GAS
//   DIESEL
// }

// enum Role {
//   USER
//   DEALERSHIP
//   MAIN
//   ADMIN
// }

// enum EngineOil {
//   BG729
//   BG737
//   OEM_APPROVED_OIL
//   OTHER_OIL
// }
